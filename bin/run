#!/usr/bin/env bash
set -eo pipefail

# default variables
: "${PORT:=8000}"
: "${SLEEP:=1}"
: "${TRIES:=60}"
: "${MONITOR_PIDFILE:=/app/celerymonitor.pid}"
: "${SCHEDULER_PIDFILE:=/app/celerybeat.pid}"

usage() {
  echo "usage: bin/run dev"
  exit 1
}

wait_for() {
  tries=0
  echo "Waiting for $1 to listen on $2..."
  until nc -z $1 $2; do
    [[ $tries -lt $TRIES ]] || return
    [[ $? -eq 0 ]] && return
    sleep $SLEEP
    tries=$((tries + 1))
  done
}

[ $# -lt 1 ] && usage

wait_for db 5432

tests() {
  python manage.py check
  python -m pytest "$@"  # skips linter checks
}

case $1 in
  dev)
    python manage.py migrate --noinput
    exec python manage.py runserver 0.0.0.0:${PORT}
    ;;
  worker)
    celery -A server worker -l debug --events
    ;;
  beat)
    celery -A server beat --pidfile ${SCHEDULER_PIDFILE} -l debug
    ;;
  tests)
    shift
    tests
    ;;
  ci)
    shift
    tests "--lean" "$@"
    bash <(curl -s https://codecov.io/bash) -s /tmp -Z
    ;;
  *)
    exec "$@"
    ;;
esac
